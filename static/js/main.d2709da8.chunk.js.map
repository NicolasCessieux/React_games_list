{"version":3,"sources":["Game.jsx","ThemeSelection.jsx","GameList.jsx","App.js","serviceWorker.js","index.js"],"names":["Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","react_default","a","createElement","className","src","game","pochette","alt","name","description","react_router_dom","to","concat","id","type","onClick","removeGame","Component","ThemeSelection","array","len","length","out","obj","i","theme","j","push","themesArray","cleanArray","games","sort","onChange","e","handleThemeChange","target","value","map","GameList","splice","setState","axios","get","then","res","data","handleApi","_this3","src_ThemeSelection","key","filter","src_Game","App","react_router","exact","path","render","routeProps","src_GameList","assign","component","window","location","trailer","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2709da8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Card'>\r\n\r\n                <img src={this.props.game.pochette} alt='' />\r\n\r\n                <h1>{this.props.game.name}</h1>\r\n\r\n                <p>{this.props.game.description}</p>\r\n                \r\n                <NavLink to={`/trailer/${this.props.game.id}`}>\r\n                    <button\r\n                        className='PromoButton'\r\n                        type='button'\r\n                        onClick=''\r\n                        >See the trailer\r\n                    </button>\r\n                </NavLink>\r\n\r\n                <button\r\n                    className='Button'\r\n                    type='button'\r\n                    onClick={() => this.props.removeGame(this.props.game.id)}\r\n                    >Remove\r\n                </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Game;","import React, { Component } from 'react';\r\n\r\nclass ThemeSelection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    cleanArray(array) {\r\n        const len = array.length;\r\n        const out = [];\r\n        const obj = {};\r\n        for (let i = 0; i < len; i++) {\r\n          obj[array[i].theme] = 0;\r\n        }\r\n        for (let j in obj) {\r\n          out.push(j);\r\n        }\r\n        return out;\r\n      }\r\n\r\n    render() { \r\n\r\n        const themesArray = this.cleanArray(this.props.games)\r\n        //const themesArray.filter((theme,i,themes) => themes.inexOf(theme) === i)\r\n        themesArray.sort()\r\n        return (\r\n            <div>\r\n                <select\r\n                    className='Select' \r\n                    onChange={(e) => this.props.handleThemeChange(e.target.value)}\r\n                >\r\n                    <option value=\"\">Sort by theme</option>\r\n                    {\r\n                        themesArray\r\n                        .map(theme => <option value={theme}>{theme}</option>)\r\n                    }\r\n                </select> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ThemeSelection;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport Game from './Game';\r\nimport ThemeSelection from './ThemeSelection';\r\n\r\nclass GameList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          games: [],\r\n          theme: \"\",\r\n         }\r\n    }\r\n  \r\n    componentWillMount() {\r\n      axios.get(`http://www.campus-bordeaux.ovh:3002/joysticks/api/games`)\r\n        .then(res => {\r\n          this.setState({ games: res.data });\r\n          this.props.handleApi(res.data);\r\n        })\r\n    }\r\n\r\n    removeGame = (id) => {\r\n      const games = this.state.games;\r\n      //games.find((game, i) => {if(game.id === id)})\r\n      for (let i = 0; i < games.length; i ++) {\r\n        if (games[i].id === id) {\r\n          games.splice(i, 1);\r\n        }\r\n      }\r\n      this.setState({ games: games });\r\n    }\r\n\r\n    handleThemeChange = (e) => {\r\n      this.setState({ theme: e });\r\n    }\r\n\r\n    render() { \r\n      if (this.state.theme !== \"\"){\r\n        return (\r\n          <div>\r\n            <ThemeSelection\r\n              games= {this.state.games}\r\n              key= {this.state.games.id}\r\n              handleThemeChange= {this.handleThemeChange}\r\n            />\r\n            <div className='List'>\r\n              {\r\n                this.state.games\r\n                .filter(game =>\r\n                  game.theme === this.state.theme\r\n                )\r\n                .map(game =>\r\n                  <Game \r\n                    game= {game}\r\n                    key= {game.id}\r\n                    removeGame= {this.removeGame}\r\n                  />\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        );\r\n      } return (\r\n          <div>\r\n            <ThemeSelection\r\n              games= {this.state.games}\r\n              key= {this.state.games.id}\r\n              handleThemeChange= {this.handleThemeChange}\r\n            />\r\n            <div className='List'>\r\n              {\r\n                this.state.games\r\n                .map(game =>\r\n                  <Game \r\n                    game= {game}\r\n                    key= {game.id}\r\n                    removeGame= {this.removeGame}\r\n                  />\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default GameList;\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport GameList from './GameList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      games: []\n    }\n  }\n\n  handleApi = (e) => {\n    this.setState({ games: e });\n  }\n  \n  render() { \n    return (\n      <div className=\"App\">\n  \n        <Switch>\n          <Route\n            exact path=\"/\"\n            render={(routeProps) => (\n              <GameList {...routeProps} handleApi={this.handleApi} />\n            )}\n          />\n          { this.state.games\n            .map(game =>\n              <Route\n                path={`/trailer/${game.id}`}\n                component={() => {\n                  window.location = `${game.trailer}`; return null;\n                }}\n              />\n            )}\n        </Switch>\n  \n      </div>\n    );\n  }\n}\n \nexport default App;\n\n//<Route path=\"/détails/:id\" component=/>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}